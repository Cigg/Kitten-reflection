precision mediump float;

attribute vec3 aVertexPosition;
attribute vec3 aVertexNormal;

uniform mat4 uMMatrix;
uniform mat4 uPMatrix;
uniform mat4 uVMatrix;
uniform float uTime;

varying vec3 vWorldSpaceNormal;
varying vec3 vWorldSpaceCoord;

void main() {
	vec4 worldPos = uMMatrix*vec4(aVertexPosition, 1.0);
	vWorldSpaceCoord = worldPos.xyz;
	vWorldSpaceNormal = normalize(aVertexNormal);

	vec4 pos;
	vWorldSpaceCoord.y < 0.0 ?
		pos = vec4(aVertexPosition.x, 0.1, aVertexPosition.z, 1.0)
		: pos = vec4(aVertexPosition, 1.0);

	pos = uPMatrix * uVMatrix * uMMatrix*pos;

	gl_Position = pos;
}